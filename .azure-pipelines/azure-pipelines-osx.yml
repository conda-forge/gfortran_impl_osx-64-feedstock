# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-

jobs:
- job: osx
  pool:
    vmImage: macOS-12
  strategy:
    matrix:
      osx_64_cross_target_platformosx-64gfortran_version12.4.0:
        CONFIG: osx_64_cross_target_platformosx-64gfortran_version12.4.0
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_cross_target_platformosx-64g_h6d0795ed49
      osx_64_cross_target_platformosx-64gfortran_version13.3.0:
        CONFIG: osx_64_cross_target_platformosx-64gfortran_version13.3.0
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_cross_target_platformosx-64g_hc833d6b0d8
      osx_64_cross_target_platformosx-64gfortran_version14.1.0:
        CONFIG: osx_64_cross_target_platformosx-64gfortran_version14.1.0
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_cross_target_platformosx-64g_h2a11d8fd3e
      osx_64_cross_target_platformosx-arm64gfortran_version12.4.0:
        CONFIG: osx_64_cross_target_platformosx-arm64gfortran_version12.4.0
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_cross_target_platformosx-arm_h39e9d5fc83
      osx_64_cross_target_platformosx-arm64gfortran_version13.3.0:
        CONFIG: osx_64_cross_target_platformosx-arm64gfortran_version13.3.0
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_cross_target_platformosx-arm_hc7c984d2cc
      osx_64_cross_target_platformosx-arm64gfortran_version14.1.0:
        CONFIG: osx_64_cross_target_platformosx-arm64gfortran_version14.1.0
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_cross_target_platformosx-arm_hc1a3d2ce3d
      osx_arm64_cross_target_platformosx-64gfortran_version12.4.0macos_machinex86_64-apple-darwin13.4.0:
        CONFIG: osx_arm64_cross_target_platformosx-64gfortran_version12.4.0macos_machinex86_64-apple-darwin13.4.0
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_cross_target_platformosx-_haf3ec4bfa1
      osx_arm64_cross_target_platformosx-64gfortran_version13.3.0macos_machinex86_64-apple-darwin13.4.0:
        CONFIG: osx_arm64_cross_target_platformosx-64gfortran_version13.3.0macos_machinex86_64-apple-darwin13.4.0
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_cross_target_platformosx-_hda4748273c
      osx_arm64_cross_target_platformosx-64gfortran_version14.1.0macos_machinex86_64-apple-darwin13.4.0:
        CONFIG: osx_arm64_cross_target_platformosx-64gfortran_version14.1.0macos_machinex86_64-apple-darwin13.4.0
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_cross_target_platformosx-_h22435da3a6
      osx_arm64_cross_target_platformosx-arm64gfortran_version12.4.0macos_machinearm64-apple-darwin20.0.0:
        CONFIG: osx_arm64_cross_target_platformosx-arm64gfortran_version12.4.0macos_machinearm64-apple-darwin20.0.0
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_cross_target_platformosx-_h3b13e97a1c
      osx_arm64_cross_target_platformosx-arm64gfortran_version13.3.0macos_machinearm64-apple-darwin20.0.0:
        CONFIG: osx_arm64_cross_target_platformosx-arm64gfortran_version13.3.0macos_machinearm64-apple-darwin20.0.0
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_cross_target_platformosx-_h2b9e4c55ca
      osx_arm64_cross_target_platformosx-arm64gfortran_version14.1.0macos_machinearm64-apple-darwin20.0.0:
        CONFIG: osx_arm64_cross_target_platformosx-arm64gfortran_version14.1.0macos_machinearm64-apple-darwin20.0.0
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_cross_target_platformosx-_h30c66eb1d5
  timeoutInMinutes: 360
  variables: {}

  steps:
  # TODO: Fast finish on azure pipelines?
  - script: |
      export CI=azure
      export flow_run_id=azure_$(Build.BuildNumber).$(System.JobAttempt)
      export remote_url=$(Build.Repository.Uri)
      export sha=$(Build.SourceVersion)
      export OSX_FORCE_SDK_DOWNLOAD="1"
      export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
      export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
      if [[ "${BUILD_REASON:-}" == "PullRequest" ]]; then
        export IS_PR_BUILD="True"
      else
        export IS_PR_BUILD="False"
      fi
      ./.scripts/run_osx_build.sh
    displayName: Run OSX build
    env:
      BINSTAR_TOKEN: $(BINSTAR_TOKEN)
      FEEDSTOCK_TOKEN: $(FEEDSTOCK_TOKEN)
      STAGING_BINSTAR_TOKEN: $(STAGING_BINSTAR_TOKEN)
  - script: |
      export CI=azure
      export CI_RUN_ID=$(build.BuildNumber).$(system.JobAttempt)
      export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
      export CONDA_BLD_DIR=/Users/runner/miniforge3/conda-bld
      export ARTIFACT_STAGING_DIR="$(Build.ArtifactStagingDirectory)"
      # Archive everything in CONDA_BLD_DIR except environments
      export BLD_ARTIFACT_PREFIX=conda_artifacts
      if [[ "$AGENT_JOBSTATUS" == "Failed" ]]; then
        # Archive the CONDA_BLD_DIR environments only when the job fails
        export ENV_ARTIFACT_PREFIX=conda_envs
      fi
      ./.scripts/create_conda_build_artifacts.sh
    displayName: Prepare conda build artifacts
    condition: succeededOrFailed()

  - task: PublishPipelineArtifact@1
    displayName: Store conda build artifacts
    condition: not(eq(variables.BLD_ARTIFACT_PATH, ''))
    inputs:
      targetPath: $(BLD_ARTIFACT_PATH)
      artifactName: $(BLD_ARTIFACT_NAME)

  - task: PublishPipelineArtifact@1
    displayName: Store conda build environment artifacts
    condition: not(eq(variables.ENV_ARTIFACT_PATH, ''))
    inputs:
      targetPath: $(ENV_ARTIFACT_PATH)
      artifactName: $(ENV_ARTIFACT_NAME)